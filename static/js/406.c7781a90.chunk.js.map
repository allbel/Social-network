{"version":3,"file":"static/js/406.c7781a90.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__znlLW\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatusProfile: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n\r\n    const [mode, setMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setMode(true)\r\n\r\n    const deactivateEditMode = () => {\r\n        setMode(false)\r\n        props.updateStatusProfile(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!mode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n                </div>\r\n            }\r\n            {mode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport css from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatusProfile: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusProfile, ...props}: ProfileInfoType) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={css.descriptionBlock}>\r\n                {profile.photos.large && <img src={profile.photos.large}/>}\r\n                <div><span>FullName: </span>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatusProfile={updateStatusProfile}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__AhxFh\",\"postsBlock\":\"MyPosts_postsBlock__LtpQN\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KwiPQ\"};","import React from 'react';\r\nimport css from './Post.module.css';\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\ntype PostPropsType = PostType\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={css.item}>\r\n            <img src=\"https://cdn.fishki.net/upload/post/201505/08/1526580/0_8af37_3d6ed850_xxl.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like: {props.likeCounts}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport css from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your post'}\r\n                       validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: \"profileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n    let postsElements = props.posts.map(p =>\r\n        <Post\r\n            id={p.id}\r\n            message={p.message}\r\n            likeCounts={p.likeCounts}/>)\r\n\r\n    const onAddPost = (values: FormDataType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={css.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={css.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateProfilePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchProfilePropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStateProfilePropsType & MapDispatchProfilePropsType\r\n\r\nconst mapStateToProps = (state: StateType): MapStateProfilePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchProfilePropsType => {\r\n    return {\r\n        addPost: (text: string) => {\r\n            dispatch(addPostAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, {ReactNode} from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileContainerPropsType} from \"./ProfileContainer\";\r\n\r\n\r\ntype ProfilePropsType = ProfileContainerPropsType & {\r\n    children?: ReactNode;\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatusProfile={props.updateStatusProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {getStatusProfile, getUserProfile, ProfileType, updateStatusProfile} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {IdType} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType>{\r\n\r\n    componentDidMount() {\r\n        let userId: string | IdType = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(String(userId))\r\n        this.props.getStatusProfile(String(userId))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     status={this.props.status}\r\n                     updateStatusProfile={this.props.updateStatusProfile}/>\r\n        );\r\n    }\r\n};\r\n\r\ntype MapStateProfileContainerPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    authUserId: IdType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchProfileContainerPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatusProfile: (userId: string) => void\r\n    updateStatusProfile: (status: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype ProfileContainerConnectPropsType =\r\n    MapStateProfileContainerPropsType & MapDispatchProfileContainerPropsType\r\n\r\nexport type ProfileContainerPropsType =\r\n    RouteComponentProps<PathParamsType> & ProfileContainerConnectPropsType\r\n\r\nconst mapStateToProps = (state: StateType): MapStateProfileContainerPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatusProfile,\r\n        updateStatusProfile\r\n    }),\r\n    withRouter,\r\n)(ProfileContainer)"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","props","useState","mode","setMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatusProfile","onChange","e","currentTarget","profile","className","css","photos","large","src","fullName","Preloader","alt","message","likeCounts","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElements","posts","map","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","text","addPostAC","MyPosts","ProfileContainer","userId","this","match","params","authUserId","history","getUserProfile","String","getStatusProfile","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}